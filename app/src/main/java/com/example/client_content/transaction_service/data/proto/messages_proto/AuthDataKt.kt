// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: messages.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
@kotlin.jvm.JvmName("-initializeauthData")
public inline fun authData(block: AuthDataKt.Dsl.() -> kotlin.Unit): Messages.AuthData =
  AuthDataKt.Dsl._create(Messages.AuthData.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `AuthData`
 */
public object AuthDataKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: Messages.AuthData.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: Messages.AuthData.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): Messages.AuthData = _builder.build()

    /**
     * `int32 counter = 1;`
     */
    public var counter: kotlin.Int
      @JvmName("getCounter")
      get() = _builder.getCounter()
      @JvmName("setCounter")
      set(value) {
        _builder.setCounter(value)
      }
    /**
     * `int32 counter = 1;`
     */
    public fun clearCounter() {
      _builder.clearCounter()
    }

    /**
     * `string macLabel = 2;`
     */
    public var macLabel: kotlin.String
      @JvmName("getMacLabel")
      get() = _builder.getMacLabel()
      @JvmName("setMacLabel")
      set(value) {
        _builder.setMacLabel(value)
      }
    /**
     * `string macLabel = 2;`
     */
    public fun clearMacLabel() {
      _builder.clearMacLabel()
    }

    /**
     * `bytes mac = 3;`
     */
    public var mac: com.google.protobuf.ByteString
      @JvmName("getMac")
      get() = _builder.getMac()
      @JvmName("setMac")
      set(value) {
        _builder.setMac(value)
      }
    /**
     * `bytes mac = 3;`
     */
    public fun clearMac() {
      _builder.clearMac()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun Messages.AuthData.copy(block: AuthDataKt.Dsl.() -> kotlin.Unit): Messages.AuthData =
  AuthDataKt.Dsl._create(this.toBuilder()).apply { block() }._build()

